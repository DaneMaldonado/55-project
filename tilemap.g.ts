// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile33 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile34 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile35 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile31 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile32 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`0d002600010b0b030d0d0d0d0d010b0b030a070c0905060505050a0c07090a0c0c090505050e050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c070605050605070c07090a0c0c0905050505050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c070505050505070c07090a0c0c0905050505050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c070505050505070c07090a0c0c09050e0505050a0c0c090a0c070905050505050a070c090a0c0c090505050e050a0c0c090a070c0705050505050a0c07090a0c0c090505050505070c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c07050e050505070c07090a0c0c0905050505050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c070505050505070c07090a0c0c0905050505050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c0905050505050a0c07090a0c0c0905050505050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c090a070c0905050505050a0c07090a0c0c0905050f05050a0c0c090a0c070905050505050a070c090a0c0c0905050505050a0c0c0904080802050505050504080802`, img`
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
.............
`, [myTiles.transparency16,myTiles.tile4,myTiles.tile6,myTiles.tile8,myTiles.tile9,myTiles.tile15,myTiles.tile26,myTiles.tile1,myTiles.tile3,sprites.skillmap.islandTile5,sprites.skillmap.islandTile3,sprites.skillmap.islandTile1,sprites.skillmap.islandTile4,myTiles.tile28,myTiles.tile31,myTiles.tile33,myTiles.tile14,myTiles.tile10,myTiles.tile12], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`0c0026000304020202021d020202021c03041d02020202020202021c03040202020202020202021c1e0401011f0709090909090903040101010a1a19191603031e0401011d0a1b141417031e03041f01010a1512121803031e04010101080b0b0b0b030303040202020202021d020a0303041d020202020202020a1e03040202021d020202020a031e0309090909050101010a1e0303030c120f041d01010a03031e031114100401011f0a1e0303030e130d040101010a031e030b0b0b0b0601011d0a1e030402020202020202020a031e04021d0202020202020a1e030402020202020202020a031e041f01010709090909030303040101010a0c0f030c0f031e041d01010a0e0d030e0d030304010101080b0b0b0b03031e04011f01021d0202020a030304010101020202021d0a1e1e04011d0102020202020a030303090909090501011f0a1e030c0f030c0f041d01010a03030e0d030e0d040101010a1e03030b0b0b0b06011f010a031e040202021d020101010a1e0304020202020201011d0a031e0402020202020101010a1e030401011f0709090909030303041d01010a1a131313160303040101010a1b141414170303040120010a15121212180303040101010a030303030303`, img`
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
............
`, [myTiles.transparency16,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundSouth,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenOuterWest0,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterSouth2,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorth1,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterWest1,myTiles.tile30,myTiles.tile27,sprites.dungeon.floorDarkDiamond,myTiles.tile32,myTiles.tile33], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`0a0026000a030303030c16160a0c0513040413060101050605040413040617170506050413040406010105060513040413060101050605090909090b01010506110208020202020205061102020202020202050611020202020208020506110101010a030303040611170108050704070406110101010d0909090406111502021414020205061102150214140202050611150215141402020506050303030c1710080507050404120610101005060512040406101010050605040412060810100506051204040610101007060504041206011701050605120404060101010506050404120601080105060d0909090b0101010507020202020202020205060e020202020202020506020202020202020205060a0c0f0f0f0a030304060506080101050704040605060101010504040706070601010105070404060506170108050404070605060101010507040406050701010105040407060506011001050704040605060118010504040706070601010105070404060d0b0119010d0909090b`, img`
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
`, [myTiles.transparency16,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.skillmap.islandTile1,sprites.skillmap.islandTile4,sprites.skillmap.islandTile3,sprites.skillmap.islandTile5,myTiles.tile1,sprites.builtin.brick,myTiles.tile3,myTiles.tile4,myTiles.tile6,myTiles.tile8,myTiles.tile9,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile20,myTiles.tile22,myTiles.tile24,myTiles.tile25,myTiles.tile31,myTiles.tile33,myTiles.tile5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile9":
            case "tile11":return tile11;
            case "myTile13":
            case "tile15":return tile15;
            case "myTile11":
            case "tile18":return tile18;
            case "myTile8":
            case "tile16":return tile16;
            case "myTile10":
            case "tile17":return tile17;
            case "myTile12":
            case "tile19":return tile19;
            case "myTile14":
            case "tile20":return tile20;
            case "myTile17":
            case "tile23":return tile23;
            case "myTile15":
            case "tile21":return tile21;
            case "myTile21":
            case "tile27":return tile27;
            case "myTile22":
            case "tile28":return tile28;
            case "myTile23":
            case "tile29":return tile29;
            case "myTile19":
            case "tile25":return tile25;
            case "myTile27":
            case "tile33":return tile33;
            case "myTile28":
            case "tile34":return tile34;
            case "myTile29":
            case "tile35":return tile35;
            case "myTile20":
            case "tile26":return tile26;
            case "SpawnCopCar":
            case "tile12":return tile12;
            case "SpawnChaseCar":
            case "tile10":return tile10;
            case "EnemyOverlap1":
            case "tile14":return tile14;
            case "CopCarPullOut":
            case "tile13":return tile13;
            case "myTile16":
            case "tile22":return tile22;
            case "myTile18":
            case "tile24":return tile24;
            case "myTile24":
            case "tile30":return tile30;
            case "myTile25":
            case "tile31":return tile31;
            case "myTile26":
            case "tile32":return tile32;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
